#!/bin/bash

# Your Notion API Key
NOTION_API_KEY="secret_cOdRDdvD5qlpEgfaijvNxsm0s8lOt4OwPxwCCdnhgr5"

# The ID of the database
DATABASE_ID="51e9530dc18945019f6c81c9af86900c"

# The base URL for the Notion API
NOTION_API_URL="https://api.notion.com/v1"

# Function to make a request to the Notion API
function make_request() {
    local method=$1
    local path=$2
    local data=$3
    curl --silent --show-error --request "$method" "$NOTION_API_URL/$path" \
        --header "Content-Type: application/json" \
        --header "Notion-Version: 2021-08-16" \
        --header "Authorization: Bearer $NOTION_API_KEY" \
        --data "$data"
}

# Function to create a new item in the to-do list
function create_todo_item() {
    local name=$1
    make_request POST "pages" "{\"parent\": {\"database_id\": \"$DATABASE_ID\"}, \"properties\": {\"Name\": {\"title\": [{\"text\": {\"content\": \"$name\"}}]}}}"
}

# Function to delete an item from the to-do list
function delete_todo_item() {
    local item_id=$1
    make_request DELETE "blocks/$item_id"
}

# Function to mark an item as complete in the to-do list
function complete_todo_item() {
    local item_id=$1
    make_request PATCH "pages/$item_id" "{\"to_do\": true}"
}

# Function to mark an item as incomplete in the to-do list
function incomplete_todo_item() {
    local item_id=$1
    make_request PATCH "blocks/$item_id" "{\"to_do\": {\"checked\": false}}"
}

# Function to edit an item in the to-do list
# TODO: check why it's triggering error
function edit_todo_item() {
    local item_id=$1
    local editor=$(command -v $EDITOR)
    if [[ -n "$editor" ]]; then
        local tmp_file=$(mktemp /tmp/todo.XXXXXX)
        make_request GET "blocks/$item_id" | jq -r '.to_do.text[].plain_text' > "$tmp_file"
        $editor "$tmp_file"
        local new_name=$(cat "$tmp_file")
        rm "$tmp_file"
        make_request PATCH "blocks/$item_id" "{\"to_do\": {\"text\": [{\"type\": \"text\", \"text\": {\"content\": \"$new_name\"}}]}}"
    else
        echo "Error: EDITOR not set"
        exit 1
    fi
}

# Function to list all items in the to-do list
function list_todo_items() {
    local database=$(make_request GET "databases/$DATABASE_ID")
    local items=$(make_request POST "databases/$DATABASE_ID/query" "{\"filter\": {\"property\": \"Name\", \"title\": {\"is_not_empty\": true}}, \"sorts\": [{\"property\": \"Last edited time\", \"direction\": \"descending\"}]}")

    echo "To-Do List:"
    echo "-----------"
    echo "$items" | jq -r '.results[] | .id + " - " + .properties.Name.title[0].text.content'
}

# Main script
case "$1" in
    "add")
        shift
        create_todo_item "$*"
        ;;
    "remove")
        shift
        delete_todo_item "$1"
        ;;
    "list")
        shift
        list_todo_items "$1"
        ;;
    "edit")
        shift
        edit_todo_item "$1"
        ;;
    "complete")
        shift
        complete_todo_item "$1"
        ;;
esac
