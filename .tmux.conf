set  -g default-terminal "screen"
set  -g base-index      0
setw -g pane-base-index 0

set -g status-keys vi
set -g mode-keys   vi

set  -g mouse             off
setw -g aggressive-resize off
setw -g clock-mode-style  12
set  -s escape-time       500
set  -g history-limit     2000

set -g default-terminal "xterm-256color"
set -ag terminal-overrides ",xterm-256color:Tc"

# start window indexing at one instead of zero
set -g base-index 1
set -g pane-base-index 1
set -g renumber-windows on
setw -g mode-keys vi

# fix accidently typing accent characters, etc.
# by forcing the terminal to not wait around # (every single tmux file should have this)
set -sg escape-time 0

# This config allow vim to detect edit on another panes and make options like
# "autoread" work properly
set -g focus-events on

set -g history-limit 1000000
# set -g mouse on

# ------------------- Tmux Appearance --------------------
set -g status-style "bg=default"
set -g automatic-rename on
set -g automatic-rename-format '#{b:pane_current_path}'
set -g status-interval 1
set -g status-position top
set -g status-right "#[align=absolute-centre] #(gh_current_branch #{pane_current_path}) #[align=right] #(pomo)"
set -ga status-right ""
set -g status-right-length 70

# C-b is not acceptable as prefix -- Vim uses it
unbind C-b
set -g prefix 'C-q'

bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"

# Easy bindings for split
bind '\' split-window -h -c "#{pane_current_path}"
bind '-' split-window -v -c "#{pane_current_path}"
unbind c
bind c new-window -c "#{pane_current_path}"
bind-key C-d kill-pane

is_neovim="ps -o state= -o comm= -t '#{pane_tty}' \
           | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(nvim|x?nvimx?)(diff)?$'"
# VIM, NEOVIM, etc...
is_any_vim="ps -o state= -o comm= -t '#{pane_tty}' \
        | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
is_helix="ps -o state= -o comm= -t '#{pane_tty}' \
        | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(hx)?$'"

bind-key C-h select-pane -L
bind-key C-j  select-pane -D
bind-key C-k select-pane -U
bind-key C-l  select-pane -R
bind-key h select-pane -L
bind-key j  select-pane -D
bind-key k select-pane -U
bind-key l  select-pane -R

bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 6

bind R source ~/.tmux.conf \; display "Reloaded"

# Search back to last prompt (mnemonic: "[b]ack"); searches for non-breaking
# space in prompt.
bind-key b copy-mode\; send-keys -X start-of-line\; send-keys -X search-backward "üçí"

bind-key Q confirm-before -p "Kill #S (y/n)?" "run-shell 'tmux switch-client -n \\\; kill-session -t \"#S\"'"

bind-key Enter run-shell "~/Scripts/runproject #{pane_current_path}"

bind-key -T copy-mode-vi a send-keys -X copy-pipe-and-cancel "pbcopy"\; send-keys "git add $(pbpaste)" Enter "c;gst" Enter
bind-key -T copy-mode-vi p send-keys -X copy-pipe-and-cancel "pbcopy"\; send-keys "git add -p $(pbpaste)" Enter

bind-key -T copy-mode-vi C-f send-keys -X copy-pipe "tmux_open_selected_on_vim"
bind-key -T copy-mode-vi o send-keys -X copy-pipe-and-cancel "~/Scripts/tmux_open"
bind-key C-u copy-mode \; send -X search-backward "(https?://|git@|git://|ssh://|ftp://|file:///)[[:alnum:]?=%/_.:,;~@!#$&()*+-]*"
bind-key C-f copy-mode \; send -X search-backward "[[:alnum:]_/\.~-]+\:[0-9]+"

# bind-key g if-shell "$is_neovim" "send-keys :startinsert | term Space lazygit Enter" "display-popup -E -d '#{pane_current_path}' -w 90% -h 90% "lazygit""
bind-key g display-popup -E -d '#{pane_current_path}' -w 90% -h 90% "lazygit"
bind-key m display-popup -E -d '#{pane_current_path}' -w 90% -h 90% "tut"
bind-key e display-popup -E -d '#{pane_current_path}' -w 90% -h 90% "aerc"
bind-key t display-popup -E -d '#{pane_current_path}' -w 90% -h 90% "fish"
bind-key f run-shell "~/Scripts/tmux_file_tree"

bind-key C-o run-shell "tmux neww tmuxsessionizer"
